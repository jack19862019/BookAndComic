<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TUserCurrencyLogMapper">

    <resultMap type="TUserCurrencyLog" id="TUserCurrencyLogResult">
        <result property="id"    column="id"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="currency"    column="currency"    />
        <result property="currencyType"    column="currency_type"    />
        <result property="otherUserId"    column="other_user_id"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
    </resultMap>

    <sql id="selectTUserCurrencyLogVo">
        select id, create_time, update_time, currency, currency_type, other_user_id, user_id, user_name from t_user_currency_log
    </sql>

    <select id="selectTUserCurrencyLogList" parameterType="TUserCurrencyLog" resultMap="TUserCurrencyLogResult">
        <include refid="selectTUserCurrencyLogVo"/>
        <where>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
            <if test="currency != null "> and currency = #{currency}</if>
            <if test="currencyType != null "> and currency_type = #{currencyType}</if>
            <if test="otherUserId != null  and otherUserId != ''"> and other_user_id = #{otherUserId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
        </where>
    </select>

    <select id="selectTUserCurrencyLogById" parameterType="Long" resultMap="TUserCurrencyLogResult">
        <include refid="selectTUserCurrencyLogVo"/>
        where id = #{id}
    </select>

    <insert id="insertTUserCurrencyLog" parameterType="TUserCurrencyLog" useGeneratedKeys="true" keyProperty="id">
        insert into t_user_currency_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createTime != null ">create_time,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="currency != null ">currency,</if>
            <if test="currencyType != null ">currency_type,</if>
            <if test="otherUserId != null  and otherUserId != ''">other_user_id,</if>
            <if test="userId != null ">user_id,</if>
            <if test="userName != null  and userName != ''">user_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="currency != null ">#{currency},</if>
            <if test="currencyType != null ">#{currencyType},</if>
            <if test="otherUserId != null  and otherUserId != ''">#{otherUserId},</if>
            <if test="userId != null ">#{userId},</if>
            <if test="userName != null  and userName != ''">#{userName},</if>
         </trim>
    </insert>

    <update id="updateTUserCurrencyLog" parameterType="TUserCurrencyLog">
        update t_user_currency_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="currency != null ">currency = #{currency},</if>
            <if test="currencyType != null ">currency_type = #{currencyType},</if>
            <if test="otherUserId != null  and otherUserId != ''">other_user_id = #{otherUserId},</if>
            <if test="userId != null ">user_id = #{userId},</if>
            <if test="userName != null  and userName != ''">user_name = #{userName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTUserCurrencyLogById" parameterType="Long">
        delete from t_user_currency_log where id = #{id}
    </delete>

    <delete id="deleteTUserCurrencyLogByIds" parameterType="String">
        delete from t_user_currency_log where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
